//
// Raw input events
//

#pragma once
#include "events/input_map.hpp"

namespace neko::evt
{
  //
  // Button event
  // Indicates a binary (up/down) state of a device button
  // Generated by the platform layer
  //
  struct button
  {
    //
    // Button state
    //
    enum class state : std::uint8_t
    {
      down,
      up
    };

    using enum state;

    using key_code = input_map::key_codes;
    using enum key_code;

    //
    // Checks if the button was released
    //
    bool is_up() const noexcept
    {
      return keyState == up;
    }

    //
    // Checks if the button was pressed
    //
    bool is_down() const noexcept
    {
      return keyState == down;
    }

    //
    // Converts the key code to a char
    //
    auto to_char() const noexcept
    {
      return static_cast<std::uint8_t>(code);
    }

    //
    // Returns the button string identifier
    //
    auto to_string() const noexcept
    {
      return input_map::to_string(code);
    }

    //
    // Current button state
    //
    state keyState{};

    //
    // Engine key code
    //
    key_code code{};
  };


  //
  //
  //
  struct position
  {
  };
}